import hebi
import math
from time import sleep, time
import numpy as np
import sympy as sp
import time 
from lines import line3D
from InvK_test_5 import StraightLine, addGimbal

def getTrajectory(pointNum, speed): 
    if pointNum == 1:
        pos = np.matrix([
[0.10801901337976639264769888126924, 0.22461785098859528103673793832028, 0.34789207340795224643223600625228, 0.47484102055525291390826804735812, 0.60161629696168443078932820203015, 0.72411698334056746789401568101687, 0.83874878454898330091693572053079, 0.94302481636856428107018903408867,  1.0357751183962270727113071844446,  1.1169749016833167290251441959979],
[ 1.1267962817813046298810342855786,  1.1916267044434214123946925228336,  1.2415875803284203544178795705734,  1.2757319276514901660535210028289,  1.2929443413869997447482414676296,  1.2924092086760461824350199844701,  1.2738269549085894881923924587917,  1.2372866392827101598238285230665,  1.1827460969982251506223751684044,  1.1089830034139932592430201048374],
[-1.1267962817813046298810342855786, -1.1916267044434214123946925228336, -1.2415875803284203544178795705734, -1.2757319276514901660535210028289, -1.2929443413869997447482414676296, -1.2924092086760461824350199844701, -1.2738269549085894881923924587917, -1.2372866392827101598238285230665, -1.1827460969982251506223751684044, -1.1089830034139932592430201048374],
[-1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398],
[-1.1585035939521405283067238354093,  -1.239275937436998097052143615124, -1.2929241927042695249387693688914, -1.3210088291815014614695512003653, -1.3241583133850676593381882367198, -1.3024356521474039095227800062443, -1.2553758805174795418342901375474, -1.1817131581487772451396123704639,  -1.078644589766485734778970664307, -0.9400279879470271658976607229101],
[-1.5390890146240607753036566855189, -1.5231470938013199890718951430592, -1.5194597144190475032084564370316, -1.5255194252648853783133160378132, -1.5395823547968287591393994662595, -1.5607698833235389466415862135754,  -1.589247401186006620087448556594, -1.6263698079288295884135623879522,  -1.674897834026636089572750739447, -1.7397513422618627670747056172769]


        ])
    elif pointNum == 2:
        pos = np.matrix([
            [ 1.1169748998124671007744942096705,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,   1.1169748998124671007744948422299,   1.1169748998124671007744948422299,   1.1169748998124671007744948422299],
[ 1.1189067172039359695482353310738,  1.1191512676339742296045428658944,  1.1111384801477471984478504791816,   1.095733384344794977216354386113,  1.0734949251140641209904176722018,  1.0448385513553669784746447713361,  1.0101202700708604172572302343239,  0.96968936024389146538638565640079,  0.92392209058967472031631242971046,  0.87324130754309040261699085637766],
[-1.1189067172039359695482353310738, -1.1191512676339742296045428658944, -1.1111384801477471984478504791816,  -1.095733384344794977216354386113, -1.0734949251140641209904176722018, -1.0448385513553669784746447713361, -1.0101202700708604172572302343239, -0.96968936024389146538638565640079, -0.92392209058967472031631242971046, -0.87324130754309040261699085637766],
[-1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398],
[-1.0629511756754475201706398054788,   -1.16940725893150516310736304989, -1.2629308574051878787442946614916, -1.3456550038104175029316178315682, -1.4188558943511857583029898780974, -1.4833216751239900851593815281848, -1.5395267967462245671863207740874,  -1.5877365765031910072084525162533,  -1.6280760516121395502226954615945,  -1.6605793508882721559327266214817],
[-1.6267518683233851231069417609446,  -1.520540335497365740226526051354, -1.4190039495374559934329020530396, -1.3208747073292741480140827898944,  -1.225435357557775036416774029454,  -1.132313203026273567044609478501, -1.0413898001195325238002556955861, -0.95274911053559713190727937549709, -0.86664236577243184382296320346559, -0.78345828344971492041361047024561]
        ])
    elif pointNum == 3:
            pos = np.matrix([
                [   1.116974899812467109717563583655,   1.1169748998124671007744948843257,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299,  1.1169748998124671007744948422299],
[ 0.92392244297291493565312863417664,  0.96968956839196095030067165799703,  1.0101203442091642710281244325312,  1.0448384872292403526644647227407,  1.0734946748879318209682830004046,  1.0957327984559102839227983392079,   1.111137156776544917293432747795,  1.1191480653624807553517169313429,  1.1189144844978458677674615727379,  1.1089990243938718855913015148237],
[-0.92392244297291493565312863417664, -0.96968956839196095030067165799703, -1.0101203442091642710281244325312, -1.0448384872292403526644647227407, -1.0734946748879318209682830004046, -1.0957327984559102839227983392079,  -1.111137156776544917293432747795, -1.1191480653624807553517169313429, -1.1189144844978458677674615727379, -1.1089990243938718855913015148237],
[ -1.5707963267948966192313216914177,  -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398],
[ -1.6280753316600577586878018369517,  -1.5877357763240735058541983237293, -1.5395259056105270802355544771584, -1.4833206144944389050051724133235, -1.4188544623710820155899966724551, -1.3456527453049686902397830163221, -1.2629267058472161653015853635199, -1.1693983587342289604834842120314, -1.0629757919267293084737986545072,  -0.940072663319553140378921995235],
[-0.86664343810775385069467303257455,  -0.9527501188627841181758195696173, -1.0413907653935338645219161907224, -1.1323141995296981213886385447668, -1.2254365393117464791076325632991, -1.3208763799458382674123615582354, -1.4190067777242254257211936196247, -1.5205460334231484685975789546611, -1.6267350193660132330230091535804, -1.7397226878692154189417257549383]
 
            ])

    elif pointNum == 4:
            pos = np.matrix([
[  1.0479927832453079368059619032158, 0.97408329233082358313382521538505, 0.89578117462882859258171828338659, 0.81390296739644919794070309886977, 0.72950207090987296241317420137569, 0.64379243018629777328109447027047,   0.5580447249801520244182164384193,  0.47347666311455738076703267512997,  0.39115975924931098479702574429068,  0.31195163994968661868220068370632],
[  1.1428182823566612814809136783406,  1.1668304897936939822798896372857,  1.1812163429231608773186127192135,  1.1860109667629242997758847371617,  1.1812153227573999722547336591233,  1.1668284740757333025185986055479,   1.1428149455419401603341434155655,   1.1089996302579848799934981453304,   1.0648551765135876889909488722771,   1.0090139480528574867513185293321],
[ -1.1428182823566612814809136783406, -1.1668304897936939822798896372857, -1.1812163429231608773186127192135, -1.1860109667629242997758847371617, -1.1812153227573999722547336591233, -1.1668284740757333025185986055479,  -1.1428149455419401603341434155655,  -1.1089996302579848799934981453304,  -1.0648551765135876889909488722771,  -1.0090139480528574867513185293321],
[ -1.5707963267948966197017238995794, -1.5707963267948966192308051524386, -1.5707963267948966192313221323155, -1.5707963267948966192313216913978, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398],
[-0.99486532602849404397676490620871, -1.0328221209964522077844939986478, -1.0551861931021141844843275083722, -1.0625771838893062845086136390313, -1.0551845068293206927153846502442, -1.0328184242440377250539724460272, -0.99485823767287448079638185806272, -0.94007222324983630112938908524728, -0.86620657175073671845527562819142, -0.76891748983527091182807397931766],
[ -1.7187492831230639112783470704457, -1.7048046955921384482247068053021, -1.6968264766159433665636314696943, -1.6942301096685146889966173334707, -1.6968271427229759532686952442287, -1.7048063766265922511939723948703,  -1.7187530346639623532671077928524,  -1.7397237338030452525934552954328,  -1.7694449315577476442650194794353,  -1.8108927850124832486525907853641]

                ])

    elif pointNum == 5:
            pos = np.matrix([
[0.31195164174375797615386765734344,  0.31195164008752922079743923348661, 0.31195164008752922065818212956481, 0.31195164008752922065818212694244, 0.31195164008752922065818212694244,  0.31195164008752922065818212694244,  0.31195164008752922065818212694244, 0.31195164008752922065818212694244,  0.31195164008752922065818212694244,  0.31195164008752922065818212694244],
[ 1.0251654171273924951850489025105,   1.0320477315398197956307868822531,  1.0315747662449290835251973485079,  1.0248713986688964735691833342766,  1.0126345011871215645230750437363,  0.99534568536871985651575349081369,  0.97336702706020114761815052248689,  0.9469956858266629332667589814874,  0.91649734459712334080770191092175,  0.88212742099423912517772112451111],
[-1.0251654171273924951850489025105,  -1.0320477315398197956307868822531, -1.0315747662449290835251973485079, -1.0248713986688964735691833342766, -1.0126345011871215645230750437363, -0.99534568536871985651575349081369, -0.97336702706020114761815052248689, -0.9469956858266629332667589814874, -0.91649734459712334080770191092175, -0.88212742099423912517772112451111],
[-1.5707963267948966192310259274215,  -1.5707963267948966192313217299172, -1.5707963267948966192313216916387, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398, -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398],
[-0.8898972820139317787842520938328, -0.99310076742863007597836903141991, -1.0831650919761711999082380456533, -1.1628023338242367743467485555271, -1.2336439184743679960518295957935,  -1.2967458907685617651985545677378,   -1.352809435532362150046785792436, -1.4023038187151315034081184470586,  -1.4455406051036974247224858747728,  -1.4827216684447873835802494742424],
[-1.7060644619083573901301535918439,  -1.6097432909060863933817640861828, -1.5192060010636545573463055382042, -1.4328653916395563729517810140991, -1.3497869095076502422005916832924,  -1.2693961213950547650465451584255,  -1.1913539183227356713007109654005, -1.1154881939064281035879867697784,  -1.0417530662883225898145622714985, -0.97020207934434841532681788561836]

                ])

    elif pointNum == 6:
        pos = np.matrix([
[ 0.28282010370607618028441098838096,  0.25309051938342625704458900512844,  0.22280654396504688490123041713804,  0.19201761255263505098032275479706, 0.16077812801951201444982284518798, 0.12914694407441462009983049388256, 0.097186731105286030890343034703164, 0.064963240918324253148706320460095, 0.032544491646249624483339171200202, -0.00000010183693194319497261579156215768],
[ 0.91504223344434541242739365108047,  0.94499094167392987195097490818687,  0.97172278566509972374938344225619,  0.99499191533361929401651221236443,  1.0145557690262166039244964999033,  1.0301689626540210157933357424783,   1.0415716706249069427255679703567,   1.0484702350387921045010810076662,   1.0505056639405844533163305897751,         1.0472010630611298670540892022251],
[-0.91504223344434541242739365108047, -0.94499094167392987195097490818687, -0.97172278566509972374938344225619, -0.99499191533361929401651221236443, -1.0145557690262166039244964999033, -1.0301689626540210157933357424783,  -1.0415716706249069427255679703567,  -1.0484702350387921045010810076662,  -1.0505056639405844533163305897751,        -1.0472010630611298670540892022251],
[ -1.5707963267948966192455513689299,  -1.5707963267948966192313201798241,  -1.5707963267948966192313216918103,  -1.5707963267948966192313216916397, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,        -1.5707963267948966192313216916398],
[ -1.4670739555697338634481826304116,  -1.4456637580254946718035085339887,   -1.418436238652009588909861137949,  -1.3853028294344082132805987402807, -1.3461238195034710581006738202967, -1.3006859146719036846093262642275,  -1.2486705208168916210096824268265,  -1.1896070079312057886775238913104,   -1.122799970669846754884102657604,        -1.0472082591312062948130474640811],
[ -1.0187646046695082227100449314949,  -1.0701235104433318738768124976572,  -1.1240828738079868085688685396667,  -1.1804854126941077544652597074333, -1.2392282763176422195531689149562, -1.3002793747770140049133557136004,  -1.3636974766029119954452317788797,  -1.4296595539024829895529033517054,  -1.4985020200656343721615741675207,        -1.5707891307248202459703879734936]

        ])

    elif pointNum == 7:
        pos = np.matrix([
[-0.10801901337976639264769888126924, -0.22461785098859528103673793832028, -0.34789207340795224643223600625228, -0.47484102055525291390826804735812, -0.60161629696168443078932820203015, -0.72411698334056746789401568101687, -0.83874878454898330091693572053079, -0.94302481636856428107018903408867,  -1.0357751183962270727113071844446,  -1.1169749016833167290251441959979],
[ 1.1267962817813046298810342855786,  1.1916267044434214123946925228336,  1.2415875803284203544178795705734,  1.2757319276514901660535210028289,  1.2929443413869997447482414676296,  1.2924092086760461824350199844701,  1.2738269549085894881923924587917,  1.2372866392827101598238285230665,  1.1827460969982251506223751684044,  1.1089830034139932592430201048374],
[-1.1267962817813046298810342855786, -1.1916267044434214123946925228336, -1.2415875803284203544178795705734, -1.2757319276514901660535210028289, -1.2929443413869997447482414676296, -1.2924092086760461824350199844701, -1.2738269549085894881923924587917, -1.2372866392827101598238285230665, -1.1827460969982251506223751684044, -1.1089830034139932592430201048374],
[-1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398],
[-1.1585035939521405283067238354093,  -1.239275937436998097052143615124, -1.2929241927042695249387693688914, -1.3210088291815014614695512003653, -1.3241583133850676593381882367198, -1.3024356521474039095227800062443, -1.2553758805174795418342901375474, -1.1817131581487772451396123704639,  -1.078644589766485734778970664307, -0.9400279879470271658976607229101],
[-1.5390890146240607753036566855189, -1.5231470938013199890718951430592, -1.5194597144190475032084564370316, -1.5255194252648853783133160378132, -1.5395823547968287591393994662595, -1.5607698833235389466415862135754,  -1.589247401186006620087448556594, -1.6263698079288295884135623879522,  -1.674897834026636089572750739447, -1.7397513422618627670747056172769]


        ])

    elif pointNum == 8:
        pos = np.matrix([
            [ -1.1169748998124671007744942096705,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,   -1.1169748998124671007744948422299,   -1.1169748998124671007744948422299,   -1.1169748998124671007744948422299],
[ 1.1189067172039359695482353310738,  1.1191512676339742296045428658944,  1.1111384801477471984478504791816,   1.095733384344794977216354386113,  1.0734949251140641209904176722018,  1.0448385513553669784746447713361,  1.0101202700708604172572302343239,  0.96968936024389146538638565640079,  0.92392209058967472031631242971046,  0.87324130754309040261699085637766],
[-1.1189067172039359695482353310738, -1.1191512676339742296045428658944, -1.1111384801477471984478504791816,  -1.095733384344794977216354386113, -1.0734949251140641209904176722018, -1.0448385513553669784746447713361, -1.0101202700708604172572302343239, -0.96968936024389146538638565640079, -0.92392209058967472031631242971046, -0.87324130754309040261699085637766],
[-1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398],
[-1.0629511756754475201706398054788,   -1.16940725893150516310736304989, -1.2629308574051878787442946614916, -1.3456550038104175029316178315682, -1.4188558943511857583029898780974, -1.4833216751239900851593815281848, -1.5395267967462245671863207740874,  -1.5877365765031910072084525162533,  -1.6280760516121395502226954615945,  -1.6605793508882721559327266214817],
[-1.6267518683233851231069417609446,  -1.520540335497365740226526051354, -1.4190039495374559934329020530396, -1.3208747073292741480140827898944,  -1.225435357557775036416774029454,  -1.132313203026273567044609478501, -1.0413898001195325238002556955861, -0.95274911053559713190727937549709, -0.86664236577243184382296320346559, -0.78345828344971492041361047024561]
        ])

    elif pointNum == 9:
            pos = np.matrix([
                [   -1.116974899812467109717563583655,   -1.1169748998124671007744948843257,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299,  -1.1169748998124671007744948422299],
[ 0.92392244297291493565312863417664,  0.96968956839196095030067165799703,  1.0101203442091642710281244325312,  1.0448384872292403526644647227407,  1.0734946748879318209682830004046,  1.0957327984559102839227983392079,   1.111137156776544917293432747795,  1.1191480653624807553517169313429,  1.1189144844978458677674615727379,  1.1089990243938718855913015148237],
[-0.92392244297291493565312863417664, -0.96968956839196095030067165799703, -1.0101203442091642710281244325312, -1.0448384872292403526644647227407, -1.0734946748879318209682830004046, -1.0957327984559102839227983392079,  -1.111137156776544917293432747795, -1.1191480653624807553517169313429, -1.1189144844978458677674615727379, -1.1089990243938718855913015148237],
[ -1.5707963267948966192313216914177,  -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398, -1.5707963267948966192313216916398],
[ -1.6280753316600577586878018369517,  -1.5877357763240735058541983237293, -1.5395259056105270802355544771584, -1.4833206144944389050051724133235, -1.4188544623710820155899966724551, -1.3456527453049686902397830163221, -1.2629267058472161653015853635199, -1.1693983587342289604834842120314, -1.0629757919267293084737986545072,  -0.940072663319553140378921995235],
[-0.86664343810775385069467303257455,  -0.9527501188627841181758195696173, -1.0413907653935338645219161907224, -1.1323141995296981213886385447668, -1.2254365393117464791076325632991, -1.3208763799458382674123615582354, -1.4190067777242254257211936196247, -1.5205460334231484685975789546611, -1.6267350193660132330230091535804, -1.7397226878692154189417257549383]
 
            ])

    elif pointNum == 10:
            pos = np.matrix([
[-0.98022862988414858196375859062066, -0.85587687263598405907387542664651, -0.72724594935394094159996799825084, -0.59827498039548328575743592725898, -0.47326567111662406195467321776707, -0.3560683798495750164824734323945, -0.24940204255906140470182861231139, -0.15458754051030308717450762923722, -0.071708070574505280450627516611459, 0.0000000011295880460986797544585867189998],
[  1.1844814499881547575239649321534,   1.2403765349867988641128144289023,   1.2779157570964393827848442537234,   1.2971024683949471215098675360359,   1.2978078499424387111673665727464,  1.2803254667853701990872373233428,   1.2455072679591213856801135255637,   1.1945299307543656648417463572801,    1.1283928774531076112870473869778,          1.0471975553714928755958279857585],
[ -1.1844814499881547575239649321534,  -1.2403765349867988641128144289023,  -1.2779157570964393827848442537234,  -1.2971024683949471215098675360359,  -1.2978078499424387111673665727464, -1.2803254667853701990872373233428,  -1.2455072679591213856801135255637,  -1.1945299307543656648417463572801,   -1.1283928774531076112870473869778,         -1.0471975553714928755958279857585],
[ -1.5707963267948966192310167893112,  -1.5707963267948966192313216914169,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398, -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,  -1.5707963267948966192313216916398,   -1.5707963267948966192313216916398,         -1.5707963267948966192313216916398],
[ -1.0813174314289636960378642986381,   -1.186238253136104364917570008164,  -1.2611562487881608207904536628998,  -1.3089493331674398562445965719072,  -1.3309050090506461044948738264425, -1.3274909711301383765096583585352,  -1.2986393207264072696918728868824,  -1.2437046532653467114722515021152,   -1.1610750367644746239553575891773,         -1.0471975602992876026475832922173],
[ -1.6739603453540877352154293525689,   -1.624934608645591172924590656075,  -1.5875558351031752357237368261732,  -1.5589494620224039389946171994783,  -1.5376991676866892804018389816535, -1.5236308224501284963069252001572,  -1.5176642740276107897175868740309,  -1.5216216042839156270988410905145,   -1.5381141674835296610610360331501,         -1.5707963218671019466775909288909]

                ])
    print(np.shape(pos))
    num_joints = np.shape(pos)[0]  
    num_waypoints = np.shape(pos)[1]
    
    vel = np.empty((num_joints,num_waypoints)) #defines velocity matrix
    acc = np.empty((num_joints,num_waypoints)) #defines velocity matrix
    vel[:,0] = acc[:,0] = 0.0 #make start velocity/acceleration 0
    vel[:,-1] = acc[:,-1] = 0.0  #make end velocity/acceleration 0
    vel[:,1:-1] = acc[:,1:-1] = np.nan
    time = np.linspace(0.0, speed*num_waypoints, num_waypoints) 
    trajectory = hebi.trajectory.create_trajectory(time, pos, vel, acc)
    # print("First Set of Gimbal Angles: ")
    # print(trajectory.get_state(0))
    lastAngles = pos[:,-1]

    #return trajectory object, number of waypoints/joints, and last set of angles in the big waypoints matrix
    return trajectory,num_joints,num_waypoints, lastAngles 

def runTrajectory(trajectory,num_joints,num_waypoints,isFinal):
    cmd = hebi.GroupCommand(num_joints)
    period = 0.01 #affects execution rate
    duration = trajectory.duration
    
    pos_cmd = np.array(num_joints, dtype=np.float64)
    vel_cmd = np.array(num_joints, dtype=np.float64)

    posfinal_cmd = 0 #matrices to hold final position
    velfinal_cmd = 0
    accfinal_cmd = 0
    t = 0

    while (t < duration):
        pos_cmd, vel_cmd, acc_cmd = trajectory.get_state(t)
        posfinal_cmd, velfinal_cmd, accfinal_cmd = trajectory.get_state(t)
        print("=======")
        print(num_waypoints)
        print(t)
        print(pos_cmd)
        print(vel_cmd)
        print(acc_cmd)
        print("=======")
        cmd.position = pos_cmd
        cmd.velocity = vel_cmd
        group.send_command(cmd)
        t = t + period
        sleep(period) #helps it not execute too fast
    
    loop = isFinal
    while(loop):
        print("=======")
        print("HOLDING FINAL POSITION")
        print(posfinal_cmd)
        print(velfinal_cmd)
        print(accfinal_cmd)
        print("=======")
        cmd.position = posfinal_cmd
        cmd.velocity = velfinal_cmd
        group.send_command(cmd)

    return True

# #====================== SETUP HEBI AND FEEDBACK =============================
lookup = hebi.Lookup()
dir(hebi)
# Wait 2 seconds for the module list to populate
sleep(2.0)

#Code for 6DOF arm
family_name = "Arm"
mod1_name = "m1"
mod2_name = "m2"
mod3_name = "m3"
mod5_name = "m5"
mod6_name = "m6"
mod7_name = "m7" #send negative value of 6
mod8_name = "m8"

#group = lookup.get_group_from_names([family_name], [mod8_name, mod6_name, mod7_name, mod5_name, mod3_name, mod2_name, mod1_name])  
group = lookup.get_group_from_names([family_name], [mod8_name, mod6_name, mod7_name, mod5_name, mod3_name, mod2_name]) #dont need mod 1

if group is None:
    print('Group not found: Did you forget to set the module family and name above?')
    exit(1)

print('Found group on network with {0} modules.'.format(group.size))
group.feedback_frequency = 50.0

group_feedback = hebi.GroupFeedback(group.size)

#======= Get Initial Theta Position Feedback =======
group.send_feedback_request()
group_feedback = group.get_next_feedback(reuse_fbk=group_feedback)
angles = group_feedback.position
#print(angles)
#===========================================================


#============= USING FEEDBACK AND FUNCTIONS TO DO CALCS =========

speed = 0.4 #seconds per waypoint (also not necessary to update every single time)

trajCalcValues = getTrajectory(1, speed) #
trajectory_1 = trajCalcValues[0]
num_joints = trajCalcValues[1] #since numjoints is always the same, no need to redeclare every single time
num_waypoints_1 = trajCalcValues[2]

trajCalcValues = getTrajectory(2, speed) #
trajectory_2 = trajCalcValues[0]
num_waypoints_2 = trajCalcValues[2]

trajCalcValues = getTrajectory(3, speed) #
trajectory_3 = trajCalcValues[0]
num_waypoints_3 = trajCalcValues[2]

trajCalcValues = getTrajectory(4, speed) #
trajectory_4 = trajCalcValues[0]
num_waypoints_4 = trajCalcValues[2]

trajCalcValues = getTrajectory(5, speed) #
trajectory_5 = trajCalcValues[0]
num_waypoints_5 = trajCalcValues[2]

trajCalcValues = getTrajectory(6, speed) #
trajectory_6 = trajCalcValues[0]
num_waypoints_6 = trajCalcValues[2]

trajCalcValues = getTrajectory(7, speed) #
trajectory_7 = trajCalcValues[0]
num_waypoints_7 = trajCalcValues[2]

trajCalcValues = getTrajectory(8, speed) #
trajectory_8 = trajCalcValues[0]
num_waypoints_8 = trajCalcValues[2]

trajCalcValues = getTrajectory(9, speed) #
trajectory_9 = trajCalcValues[0]
num_waypoints_9 = trajCalcValues[2]

trajCalcValues = getTrajectory(10, speed) #
trajectory_10 = trajCalcValues[0]
num_waypoints_10 = trajCalcValues[2]


isFinalTrajectory = False
runTrajectory(trajectory_1, num_joints, num_waypoints_1, isFinalTrajectory)

isFinalTrajectory = False
runTrajectory(trajectory_2, num_joints, num_waypoints_2, isFinalTrajectory)

isFinalTrajectory = False
runTrajectory(trajectory_3, num_joints, num_waypoints_3, isFinalTrajectory)


isFinalTrajectory = False
runTrajectory(trajectory_4, num_joints, num_waypoints_4, isFinalTrajectory)

isFinalTrajectory = False
runTrajectory(trajectory_5, num_joints, num_waypoints_5, isFinalTrajectory)

isFinalTrajectory = False
runTrajectory(trajectory_6, num_joints, num_waypoints_6, isFinalTrajectory)

isFinalTrajectory = False
runTrajectory(trajectory_7, num_joints, num_waypoints_7, isFinalTrajectory)

isFinalTrajectory = False
runTrajectory(trajectory_8, num_joints, num_waypoints_8, isFinalTrajectory)

isFinalTrajectory = False
runTrajectory(trajectory_9, num_joints, num_waypoints_9, isFinalTrajectory)

isFinalTrajectory = True
runTrajectory(trajectory_10, num_joints, num_waypoints_10, isFinalTrajectory)